name: CI/CD
on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]
jobs:
  test:
    runs-on: amazon-linux-2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test with Gradle
        run: ./gradlew test

  deploy:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Grant execute permission for gradlew and build
        run: chmod +x gradlew
      - name: Gradle clean build
        run: ./gradlew clean build -x test
      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} .
      - name: DockerHub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo yum update -y
            sudo docker kill ${{ secrets.PROJECT_NAME }} || true
            sudo docker rm -f ${{ secrets.PROJECT_NAME }} || true
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
            # Run the container with all environment variables
            sudo docker run -d -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
            --name ${{ secrets.PROJECT_NAME }} \
            -e PORT=${{ secrets.PORT }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e DB_URL=${{ secrets.DB_URL }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e AWS_ACC_KEY=${{ secrets.AWS_ACC_KEY }} \
            -e AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }} \
            -e AWS_SEC_KEY=${{ secrets.AWS_SEC_KEY }} \
            -e AWS_STACK_VAL=${{ secrets.AWS_STACK_VAL }} \
            -e FILE_ALLOWED_MEME_TYPES="${{ secrets.FILE_ALLOWED_MEME_TYPES }}" \
            -e JWT_ACC_EXPIRATION=${{ secrets.JWT_ACC_EXPIRATION }} \
            -e JWT_REF_EXPIRATION=${{ secrets.JWT_REF_EXPIRATION }} \
            -e MAX_USAGE_COUNT=${{ secrets.MAX_USAGE_COUNT }} \
            -e MIN_ROATION_INTERVAL=${{ secrets.MIN_ROATION_INTERVAL }} \
            -e PROXY_CLEANUP_INTERVAL=${{ secrets.PROXY_CLEANUP_INTERVAL }} \
            -e PROXY_CONNECTION_TIMEOUT=${{ secrets.PROXY_CONNECTION_TIMEOUT }} \
            -e PROXY_MAX_CONNECTION_PER_PROXY=${{ secrets.PROXY_MAX_CONNECTION_PER_PROXY }} \
            -e PROXY_MAX_FAILURES=${{ secrets.PROXY_MAX_FAILURES }} \
            -e PROXY_READ_TIMEOUT=${{ secrets.PROXY_READ_TIMEOUT }} \
            -e PROXY_RETRY_COUNT=${{ secrets.PROXY_RETRY_COUNT }} \
            -e PROXY_RETRY_DELAY=${{ secrets.PROXY_RETRY_DELAY }} \
            -e PROXY_VALIDATION_TIMEOUT=${{ secrets.PROXY_VALIDATION_TIMEOUT }} \
            -e PROXY_VALIDATION_URL="${{ secrets.PROXY_VALIDATION_URL }}" \
            -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
            -e REDIS_URL=${{ secrets.REDIS_URL }} \
            -e SMS_API_KEY=${{ secrets.SMS_API_KEY }} \
            -e SMS_AUTH_KEY=${{ secrets.SMS_AUTH_KEY }} \
            -e SMS_SEC_KEY=${{ secrets.SMS_SEC_KEY }} \
            -e SURVEY_DELIMITER="${{ secrets.SURVEY_DELIMITER }}" \
            -e SPRING_PROFILES_ACTIVE=dev \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
